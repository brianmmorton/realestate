# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreatePropertyConfigurationInput {
  advertisingCosts: Float!
  annualAppreciation: Float!
  annualOperatingCosts: Float!
  annualRentIncrease: Float!
  depreciableBasis: Float
  downPayment: Float!
  downPaymentSource: String
  hasSellerFinancing: Boolean!
  homeOfficeExpenses: Float!
  insurance: Float!
  interestRate: Float!
  isHistoricProperty: Boolean!
  isOpportunityZone: Boolean!
  landValue: Float
  loanTermYears: Int!
  maintenance: Float!
  name: String!
  otherExpenses: Float!
  placedInServiceDate: String
  priorDepreciation: Float
  professionalFees: Float!
  projectionYears: Int!
  propertyAddress: String!
  propertyManagement: Float!
  propertyPrice: Float!
  propertyTaxes: Float!
  qualifiesForEnergyCredits: Boolean!
  rehabEnabled: Boolean!
  rehabItems: [RehabItemInput!]!
  rehabRentIncreasePercentage: Float!
  travelExpenses: Float!
  units: [UnitInput!]!
  utilities: Float!
  vacancyRate: Float!
}

input CreatePropertyInput {
  address: String!
  bathrooms: Int
  bedrooms: Int
  description: String
  imageUrl: String
  price: Int!
  squareFeet: Int
  title: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  createProperty(input: CreatePropertyInput!): Property!
  createPropertyConfiguration(input: CreatePropertyConfigurationInput!): PropertyConfiguration!
  deleteProperty(id: ID!): Boolean!
  deletePropertyConfiguration(id: ID!): Boolean!
  updateProperty(id: ID!, input: UpdatePropertyInput!): Property!
  updatePropertyTaxInfo(id: ID!, input: UpdatePropertyTaxInfoInput!): PropertyConfiguration!
  updateUserTaxProfile(input: UpdateUserTaxProfileInput!): User!
}

type Property {
  address: String!
  bathrooms: Int
  bedrooms: Int
  createdAt: DateTimeISO!
  description: String
  id: ID!
  imageUrl: String
  owner: User!
  price: Int!
  squareFeet: Int
  title: String!
  updatedAt: DateTimeISO!
}

type PropertyConfiguration {
  advertisingCosts: Float!
  annualAppreciation: Float!
  annualOperatingCosts: Float!
  annualRentIncrease: Float!
  createdAt: DateTimeISO!
  depreciableBasis: Float
  downPayment: Float!
  downPaymentSource: String
  hasSellerFinancing: Boolean!
  homeOfficeExpenses: Float!
  id: ID!
  insurance: Float!
  interestRate: Float!
  isHistoricProperty: Boolean!
  isOpportunityZone: Boolean!
  landValue: Float
  loanTermYears: Int!
  maintenance: Float!
  name: String!
  otherExpenses: Float!
  placedInServiceDate: DateTimeISO
  priorDepreciation: Float
  professionalFees: Float!
  projectionYears: Int!
  propertyAddress: String!
  propertyManagement: Float!
  propertyPrice: Float!
  propertyTaxes: Float!
  qualifiesForEnergyCredits: Boolean!
  rehabEnabled: Boolean!
  rehabItems: [RehabItemEntity!]!
  rehabRentIncreasePercentage: Float!
  travelExpenses: Float!
  units: [UnitEntity!]!
  updatedAt: DateTimeISO!
  user: User!
  userId: String!
  utilities: Float!
  vacancyRate: Float!
}

type Query {
  me: User
  properties: [Property!]!
  property(id: ID!): Property
  propertyConfiguration(id: ID!): PropertyConfiguration
  propertyConfigurations: [PropertyConfiguration!]!
}

type RehabItemEntity {
  category: String!
  cost: Float!
  createdAt: DateTimeISO!
  id: ID!
  propertyConfigurationId: String!
  updatedAt: DateTimeISO!
}

input RehabItemInput {
  category: String!
  cost: Float!
}

type UnitEntity {
  createdAt: DateTimeISO!
  id: ID!
  monthlyRent: Float!
  propertyConfigurationId: String!
  quantity: Int!
  type: String!
  updatedAt: DateTimeISO!
}

input UnitInput {
  monthlyRent: Float!
  quantity: Int!
  type: String!
}

input UpdatePropertyInput {
  address: String
  bathrooms: Int
  bedrooms: Int
  description: String
  imageUrl: String
  price: Int
  squareFeet: Float
  title: String
}

input UpdatePropertyTaxInfoInput {
  advertisingCosts: Float
  depreciableBasis: Float
  downPaymentSource: String
  hasSellerFinancing: Boolean
  homeOfficeExpenses: Float
  isHistoricProperty: Boolean
  isOpportunityZone: Boolean
  landValue: Float
  placedInServiceDate: DateTimeISO
  priorDepreciation: Float
  professionalFees: Float
  qualifiesForEnergyCredits: Boolean
  travelExpenses: Float
}

input UpdateUserTaxProfileInput {
  annualGrossIncome: Float
  existingItemizedDeductions: Float
  filingStatus: String
  intends1031Exchange: Boolean
  isRealEstateProfessional: Boolean
  marginalTaxBracket: Float
  otherPassiveIncome: Float
  plannedHoldPeriod: Int
  stateOfResidence: String
  stateTaxRate: Float
  useStandardDeduction: Boolean
}

type User {
  annualGrossIncome: Float
  createdAt: DateTimeISO!
  email: String!
  existingItemizedDeductions: Float
  filingStatus: String
  id: ID!
  intends1031Exchange: Boolean!
  isRealEstateProfessional: Boolean!
  marginalTaxBracket: Float
  otherPassiveIncome: Float
  plannedHoldPeriod: Float
  properties: [Property!]!
  stateOfResidence: String
  stateTaxRate: Float
  taxProfileUpdatedAt: DateTimeISO
  updatedAt: DateTimeISO!
  useStandardDeduction: Boolean!
}