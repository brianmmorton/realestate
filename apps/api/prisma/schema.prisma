// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id        String   @id @db.Uuid
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  properties Property[]
  propertyConfigurations PropertyConfiguration[]

  @@map("users")
}

model Property {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String?
  price       Decimal  @db.Decimal(12, 2)
  address     String
  bedrooms    Int?
  bathrooms   Int?
  squareFeet  Decimal? @map("square_feet") @db.Decimal(10, 2)
  imageUrl    String?  @map("image_url")
  ownerId     String   @map("owner_id") @db.Uuid
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([ownerId])
  @@index([price])
  @@index([createdAt])
  @@map("properties")
}

model PropertyConfiguration {
  id                    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String
  propertyPrice         Decimal  @map("property_price") @db.Decimal(12, 2)
  propertyAddress       String   @map("property_address")
  userId                String   @map("user_id") @db.Uuid
  createdAt             DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Investment calculation data
  downPayment           Decimal  @map("down_payment") @db.Decimal(12, 2)
  interestRate          Decimal  @map("interest_rate") @db.Decimal(5, 3)
  loanTermYears         Int      @map("loan_term_years")
  
  // Operating expenses
  annualOperatingCosts  Decimal  @map("annual_operating_costs") @db.Decimal(12, 2)
  vacancyRate           Decimal  @map("vacancy_rate") @db.Decimal(5, 2)
  propertyTaxes         Decimal  @map("property_taxes") @db.Decimal(12, 2)
  insurance             Decimal  @map("insurance") @db.Decimal(12, 2)
  propertyManagement    Decimal  @map("property_management") @db.Decimal(12, 2)
  maintenance           Decimal  @map("maintenance") @db.Decimal(12, 2)
  utilities             Decimal  @map("utilities") @db.Decimal(12, 2)
  otherExpenses         Decimal  @map("other_expenses") @db.Decimal(12, 2)
  
  // Assumptions
  annualAppreciation    Decimal  @map("annual_appreciation") @db.Decimal(5, 2)
  annualRentIncrease    Decimal  @map("annual_rent_increase") @db.Decimal(5, 2)
  projectionYears       Int      @map("projection_years")

  // Rehab information
  rehabEnabled                Boolean  @default(false) @map("rehab_enabled")
  rehabRentIncreasePercentage Decimal  @default(0) @map("rehab_rent_increase_percentage") @db.Decimal(5, 2)

  // Relations
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  units      Unit[]
  rehabItems RehabItem[]

  // Indexes
  @@index([userId])
  @@index([createdAt])
  @@map("property_configurations")
}

model Unit {
  id                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                    String
  quantity                Int
  monthlyRent             Decimal  @map("monthly_rent") @db.Decimal(10, 2)
  propertyConfigurationId String   @map("property_configuration_id") @db.Uuid
  createdAt               DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt               DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  propertyConfiguration PropertyConfiguration @relation(fields: [propertyConfigurationId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([propertyConfigurationId])
  @@map("units")
}

model RehabItem {
  id                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category                String
  cost                    Decimal  @db.Decimal(12, 2)
  propertyConfigurationId String   @map("property_configuration_id") @db.Uuid
  createdAt               DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt               DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  propertyConfiguration PropertyConfiguration @relation(fields: [propertyConfigurationId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([propertyConfigurationId])
  @@map("rehab_items")
}
